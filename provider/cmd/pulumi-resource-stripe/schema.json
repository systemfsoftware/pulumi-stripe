{
    "name": "stripe",
    "displayName": "Stripe",
    "description": "A Pulumi package for creating and managing stripe cloud resources.",
    "keywords": [
        "stripe",
        "category/cloud"
    ],
    "homepage": "https://www.pulumi.com",
    "license": "Apache-2.0",
    "attribution": "This Pulumi package is based on the [`stripe` Terraform Provider](https://github.com/systemfsoftware/terraform-provider-stripe).",
    "repository": "https://github.com/systemfsoftware/pulumi-stripe",
    "publisher": "systemfsoftware",
    "meta": {
        "moduleFormat": "(.*)(?:/[^/]*)"
    },
    "language": {
        "csharp": {
            "packageReferences": {
                "Pulumi": "3.*"
            },
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true
        },
        "go": {
            "importBasePath": "github.com/systemfsoftware/pulumi-stripe/sdk/go/stripe",
            "generateResourceContainerTypes": true,
            "generateExtraInputTypes": true,
            "respectSchemaVersion": true
        },
        "nodejs": {
            "packageName": "@systemfsoftware/stripe",
            "packageDescription": "A Pulumi package for creating and managing stripe cloud resources.",
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/systemfsoftware/terraform-provider-stripe)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-stripe` repo](https://github.com/systemfsoftware/pulumi-stripe/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-stripe` repo](https://github.com/systemfsoftware/terraform-provider-stripe/issues).",
            "compatibility": "tfbridge20",
            "disableUnionOutputTypes": true,
            "respectSchemaVersion": true
        },
        "python": {
            "readme": "\u003e This provider is a derived work of the [Terraform Provider](https://github.com/systemfsoftware/terraform-provider-stripe)\n\u003e distributed under [MPL 2.0](https://www.mozilla.org/en-US/MPL/2.0/). If you encounter a bug or missing feature,\n\u003e first check the [`pulumi-stripe` repo](https://github.com/systemfsoftware/pulumi-stripe/issues); however, if that doesn't turn up anything,\n\u003e please consult the source [`terraform-provider-stripe` repo](https://github.com/systemfsoftware/terraform-provider-stripe/issues).",
            "compatibility": "tfbridge20",
            "respectSchemaVersion": true,
            "pyproject": {
                "enabled": true
            }
        }
    },
    "config": {
        "variables": {
            "apiKey": {
                "type": "string",
                "description": "The Stripe secret API key\n",
                "secret": true
            }
        },
        "defaults": [
            "apiKey"
        ]
    },
    "types": {
        "stripe:index/FileLink:FileLink": {
            "properties": {
                "created": {
                    "type": "integer",
                    "description": "Time at which the object was created. Measured in seconds since the Unix epoch.\n"
                },
                "expired": {
                    "type": "boolean",
                    "description": "Returns if the link is already expired.\n"
                },
                "expiresAt": {
                    "type": "integer",
                    "description": "Time that the link expires\n"
                },
                "id": {
                    "type": "string",
                    "description": "Unique identifier for the object.\n"
                },
                "livemode": {
                    "type": "boolean",
                    "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.\n"
                },
                "object": {
                    "type": "string",
                    "description": "String representing the object’s type. Objects of the same type share the same value.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The publicly accessible URL to download the file.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "created",
                        "expired",
                        "expiresAt",
                        "id",
                        "livemode",
                        "object",
                        "url"
                    ]
                }
            }
        },
        "stripe:index/FileLinkData:FileLinkData": {
            "properties": {
                "create": {
                    "type": "boolean",
                    "description": "Set this to true to create a file link for the newly created file. Creating a link is only possible when the file’s purpose is one of the following: business_icon, business_logo, customer_signature, dispute_evidence, pci_document, tax_document_user_upload, or terminal_reader_splashscreen.\n"
                },
                "expiresAt": {
                    "type": "integer",
                    "description": "The link isn’t available after this future timestamp.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the object in a structured format.\n"
                }
            },
            "type": "object",
            "required": [
                "create"
            ]
        },
        "stripe:index/PortalConfigurationBusinessProfile:PortalConfigurationBusinessProfile": {
            "properties": {
                "headline": {
                    "type": "string",
                    "description": "The messaging shown to customers in the portal.\n"
                },
                "privacyPolicyUrl": {
                    "type": "string",
                    "description": "A link to the business's publicly available privacy policy.\n"
                },
                "termsOfServiceUrl": {
                    "type": "string",
                    "description": "A link to the business's publicly available terms of service.\n"
                }
            },
            "type": "object"
        },
        "stripe:index/PortalConfigurationFeatures:PortalConfigurationFeatures": {
            "properties": {
                "customerUpdate": {
                    "$ref": "#/types/stripe:index/PortalConfigurationFeaturesCustomerUpdate:PortalConfigurationFeaturesCustomerUpdate",
                    "description": "Information about updating the customer details in the portal.\n"
                },
                "invoiceHistory": {
                    "$ref": "#/types/stripe:index/PortalConfigurationFeaturesInvoiceHistory:PortalConfigurationFeaturesInvoiceHistory",
                    "description": "Information about showing the billing history in the portal.\n"
                },
                "paymentMethodUpdate": {
                    "$ref": "#/types/stripe:index/PortalConfigurationFeaturesPaymentMethodUpdate:PortalConfigurationFeaturesPaymentMethodUpdate",
                    "description": "Information about updating payment methods in the portal.\n"
                },
                "subscriptionCancel": {
                    "$ref": "#/types/stripe:index/PortalConfigurationFeaturesSubscriptionCancel:PortalConfigurationFeaturesSubscriptionCancel",
                    "description": "Information about canceling subscriptions in the portal.\n"
                },
                "subscriptionPauses": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/PortalConfigurationFeaturesSubscriptionPause:PortalConfigurationFeaturesSubscriptionPause"
                    },
                    "description": "Information about pausing subscriptions in the portal.\n"
                },
                "subscriptionUpdates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/PortalConfigurationFeaturesSubscriptionUpdate:PortalConfigurationFeaturesSubscriptionUpdate"
                    },
                    "description": "Information about updating subscriptions in the portal.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "customerUpdate",
                        "invoiceHistory",
                        "paymentMethodUpdate",
                        "subscriptionCancel",
                        "subscriptionPauses",
                        "subscriptionUpdates"
                    ]
                }
            }
        },
        "stripe:index/PortalConfigurationFeaturesCustomerUpdate:PortalConfigurationFeaturesCustomerUpdate": {
            "properties": {
                "allowedUpdates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The types of customer updates that are supported. When empty, customers are not updatable.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the feature is enabled.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "stripe:index/PortalConfigurationFeaturesInvoiceHistory:PortalConfigurationFeaturesInvoiceHistory": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the feature is enabled.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "stripe:index/PortalConfigurationFeaturesPaymentMethodUpdate:PortalConfigurationFeaturesPaymentMethodUpdate": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the feature is enabled.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "stripe:index/PortalConfigurationFeaturesSubscriptionCancel:PortalConfigurationFeaturesSubscriptionCancel": {
            "properties": {
                "cancellationReason": {
                    "$ref": "#/types/stripe:index/PortalConfigurationFeaturesSubscriptionCancelCancellationReason:PortalConfigurationFeaturesSubscriptionCancelCancellationReason",
                    "description": "Whether the cancellation reasons will be collected in the portal and which options are exposed to the customer\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the feature is enabled.\n"
                },
                "mode": {
                    "type": "string",
                    "description": "Whether to cancel subscriptions immediately or at the end of the billing period.\n"
                },
                "prorationBehavior": {
                    "type": "string",
                    "description": "Whether to create prorations when canceling subscriptions.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "stripe:index/PortalConfigurationFeaturesSubscriptionCancelCancellationReason:PortalConfigurationFeaturesSubscriptionCancelCancellationReason": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the feature is enabled.\n"
                },
                "options": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Which cancellation reasons will be given as options to the customer.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled",
                "options"
            ]
        },
        "stripe:index/PortalConfigurationFeaturesSubscriptionPause:PortalConfigurationFeaturesSubscriptionPause": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the feature is enabled.\n"
                }
            },
            "type": "object"
        },
        "stripe:index/PortalConfigurationFeaturesSubscriptionUpdate:PortalConfigurationFeaturesSubscriptionUpdate": {
            "properties": {
                "defaultAllowedUpdates": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The types of subscription updates that are supported. When empty, subscriptions are not updateable.\n"
                },
                "enabled": {
                    "type": "boolean",
                    "description": "Whether the feature is enabled.\n"
                },
                "products": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/PortalConfigurationFeaturesSubscriptionUpdateProduct:PortalConfigurationFeaturesSubscriptionUpdateProduct"
                    },
                    "description": "The list of products that support subscription updates.\n"
                },
                "prorationBehavior": {
                    "type": "string",
                    "description": "Determines how to handle prorations resulting from subscription updates\n"
                }
            },
            "type": "object",
            "required": [
                "defaultAllowedUpdates",
                "enabled",
                "products"
            ]
        },
        "stripe:index/PortalConfigurationFeaturesSubscriptionUpdateProduct:PortalConfigurationFeaturesSubscriptionUpdateProduct": {
            "properties": {
                "prices": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of price IDs for the product that a subscription can be updated to.\n"
                },
                "product": {
                    "type": "string",
                    "description": "The product id.\n"
                }
            },
            "type": "object",
            "required": [
                "prices",
                "product"
            ]
        },
        "stripe:index/PortalConfigurationLoginPage:PortalConfigurationLoginPage": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Set to true to generate a shareable URL login_page.url that will take your customers to a hosted login page for the customer portal.\n"
                },
                "url": {
                    "type": "string",
                    "description": "A shareable URL to the hosted portal login page. Your customers will be able to log in with their email and receive a link to their customer portal.\n"
                }
            },
            "type": "object",
            "language": {
                "nodejs": {
                    "requiredOutputs": [
                        "url"
                    ]
                }
            }
        },
        "stripe:index/PriceCurrencyOption:PriceCurrencyOption": {
            "properties": {
                "currency": {
                    "type": "string",
                    "description": "Each currency must be a three-letter ISO currency code and a supported currency\n"
                },
                "customUnitAmount": {
                    "$ref": "#/types/stripe:index/PriceCurrencyOptionCustomUnitAmount:PriceCurrencyOptionCustomUnitAmount",
                    "description": "When set, provides configuration for the amount to be adjusted by the customer during Checkout Sessions and Payment Links\n"
                },
                "taxBehavior": {
                    "type": "string",
                    "description": "Only required if a default tax behavior was not provided in the Stripe Tax settings. Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of inclusive, exclusive, or unspecified. Once specified as either inclusive or exclusive, it cannot be changed.\n"
                },
                "tiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/PriceCurrencyOptionTier:PriceCurrencyOptionTier"
                    },
                    "description": "Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered. See also the documentation for billing_scheme.\n"
                },
                "unitAmount": {
                    "type": "integer",
                    "description": "A positive integer in cents (or -1 for a free price) representing how much to charge.\n"
                },
                "unitAmountDecimal": {
                    "type": "number",
                    "description": "Same as unit_amount, but accepts a decimal value in cents with at most 12 decimal places. Only one of unit_amount and unit_amount_decimal can be set.\n"
                }
            },
            "type": "object",
            "required": [
                "currency"
            ]
        },
        "stripe:index/PriceCurrencyOptionCustomUnitAmount:PriceCurrencyOptionCustomUnitAmount": {
            "properties": {
                "enabled": {
                    "type": "boolean",
                    "description": "Pass in true to enable custom_unit_amount, otherwise omit custom_unit_amount\n"
                },
                "maximum": {
                    "type": "integer",
                    "description": "The maximum unit amount the customer can specify for this item.\n"
                },
                "minimum": {
                    "type": "integer",
                    "description": "The minimum unit amount the customer can specify for this item. Must be at least the minimum charge amount.\n"
                },
                "preset": {
                    "type": "integer",
                    "description": "The starting unit amount which can be updated by the customer.\n"
                }
            },
            "type": "object",
            "required": [
                "enabled"
            ]
        },
        "stripe:index/PriceCurrencyOptionTier:PriceCurrencyOptionTier": {
            "properties": {
                "flatAmount": {
                    "type": "integer",
                    "description": "The flat billing amount for an entire tier, regardless of the number of units in the tier.\n"
                },
                "flatAmountDecimal": {
                    "type": "number",
                    "description": "Same as flat_amount, but accepts a decimal value representing an integer in the minor units of the currency. Only one of flat_amount and flat_amount_decimal can be set.\n"
                },
                "unitAmount": {
                    "type": "integer",
                    "description": "The per unit billing amount for each individual unit for which this tier applies.\n"
                },
                "unitAmountDecimal": {
                    "type": "number",
                    "description": "Same as unit_amount, but accepts a decimal value in cents with at most 12 decimal places. Only one of unit_amount and unit_amount_decimal can be set.\n"
                },
                "upTo": {
                    "type": "integer",
                    "description": "Specifies the upper bound of this tier. The lower bound of a tier is the upper bound of the previous tier adding one. Use -1 to define a fallback tier.\n"
                }
            },
            "type": "object"
        },
        "stripe:index/PriceRecurring:PriceRecurring": {
            "properties": {
                "aggregateUsage": {
                    "type": "string",
                    "description": "Specifies a usage aggregation strategy for prices of usage_type=metered. Allowed values are sum for summing up all usage during a period, last_during_period for using the last usage record reported within a period, last_ever for using the last usage record ever (across period bounds) or max which uses the usage record with the maximum reported usage during a period.\n"
                },
                "interval": {
                    "type": "string",
                    "description": "Specifies billing frequency. Either day, week, month or year.\n"
                },
                "intervalCount": {
                    "type": "integer",
                    "description": "The number of intervals between subscription billings. For example, interval=month and interval_count=3 bills every 3 months. Maximum of one year interval allowed (1 year, 12 months, or 52 weeks).\n"
                },
                "usageType": {
                    "type": "string",
                    "description": "Configures how the quantity per period should be determined. Can be either metered or licensed. licensed automatically bills the quantity set when adding it to a subscription. metered aggregates the total usage based on usage records. Defaults to licensed.\n"
                }
            },
            "type": "object",
            "required": [
                "interval"
            ]
        },
        "stripe:index/PriceTier:PriceTier": {
            "properties": {
                "flatAmount": {
                    "type": "integer",
                    "description": "The flat billing amount for an entire tier, regardless of the number of units in the tier.\n"
                },
                "flatAmountDecimal": {
                    "type": "number",
                    "description": "Same as flat_amount, but accepts a decimal value representing an integer in the minor units of the currency. Only one of flat_amount and flat_amount_decimal can be set.\n"
                },
                "unitAmount": {
                    "type": "integer",
                    "description": "The per unit billing amount for each individual unit for which this tier applies.\n"
                },
                "unitAmountDecimal": {
                    "type": "number",
                    "description": "Same as unit_amount, but accepts a decimal value in cents with at most 12 decimal places. Only one of unit_amount and unit_amount_decimal can be set.\n"
                },
                "upTo": {
                    "type": "integer",
                    "description": "Specifies the upper bound of this tier. The lower bound of a tier is the upper bound of the previous tier adding one. Use -1 to define a fallback tier.\n"
                }
            },
            "type": "object"
        },
        "stripe:index/PriceTransformQuantity:PriceTransformQuantity": {
            "properties": {
                "divideBy": {
                    "type": "integer",
                    "description": "Divide usage by this number.\n"
                },
                "round": {
                    "type": "string",
                    "description": "After division, either round the result up or down\n"
                }
            },
            "type": "object",
            "required": [
                "divideBy",
                "round"
            ]
        },
        "stripe:index/PromotionCodeRestrictions:PromotionCodeRestrictions": {
            "properties": {
                "firstTimeTransaction": {
                    "type": "boolean",
                    "description": "A Boolean indicating if the Promotion Code should only be redeemed for Customers without any successful payments or invoices\n"
                },
                "minimumAmount": {
                    "type": "integer",
                    "description": "Minimum amount required to redeem this Promotion Code into a Coupon (e.g., a purchase must be $100 or more to work).\n"
                },
                "minimumAmountCurrency": {
                    "type": "string",
                    "description": "Three-letter ISO code for minimum_amount\n"
                }
            },
            "type": "object",
            "required": [
                "firstTimeTransaction",
                "minimumAmount",
                "minimumAmountCurrency"
            ]
        },
        "stripe:index/ShippingRateDeliveryEstimate:ShippingRateDeliveryEstimate": {
            "properties": {
                "maximum": {
                    "$ref": "#/types/stripe:index/ShippingRateDeliveryEstimateMaximum:ShippingRateDeliveryEstimateMaximum"
                },
                "minimum": {
                    "$ref": "#/types/stripe:index/ShippingRateDeliveryEstimateMinimum:ShippingRateDeliveryEstimateMinimum"
                }
            },
            "type": "object"
        },
        "stripe:index/ShippingRateDeliveryEstimateMaximum:ShippingRateDeliveryEstimateMaximum": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "The upper bound of the estimated range. If empty, represents no lower bound.\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "integer",
                    "description": "Must be greater than 0.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "stripe:index/ShippingRateDeliveryEstimateMinimum:ShippingRateDeliveryEstimateMinimum": {
            "properties": {
                "unit": {
                    "type": "string",
                    "description": "The lower bound of the estimated range. If empty, represents no lower bound.\n",
                    "willReplaceOnChanges": true
                },
                "value": {
                    "type": "integer",
                    "description": "Must be greater than 0.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "unit",
                "value"
            ]
        },
        "stripe:index/ShippingRateFixedAmount:ShippingRateFixedAmount": {
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "A non-negative integer in cents representing how much to charge.\n"
                },
                "currency": {
                    "type": "string",
                    "description": "Three-letter ISO currency code, in lowercase. Must be a supported currency.\n"
                },
                "currencyOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/ShippingRateFixedAmountCurrencyOption:ShippingRateFixedAmountCurrencyOption"
                    },
                    "description": "Shipping rates defined in each available currency option. Each key must be a three-letter ISO currency code and a supported currency. For example, to get your shipping rate in eur, fetch the value of the eur key in currency_options. This field is not included by default. To include it in the response, expand the currency_options field.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "amount",
                "currency"
            ]
        },
        "stripe:index/ShippingRateFixedAmountCurrencyOption:ShippingRateFixedAmountCurrencyOption": {
            "properties": {
                "amount": {
                    "type": "integer",
                    "description": "A non-negative integer in cents representing how much to charge.\n",
                    "willReplaceOnChanges": true
                },
                "currency": {
                    "type": "string",
                    "description": "Three-letter ISO currency code, in lowercase. Must be a supported currency.\n",
                    "willReplaceOnChanges": true
                },
                "taxBehavior": {
                    "type": "string",
                    "description": "Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of inclusive, exclusive, or unspecified.\n",
                    "willReplaceOnChanges": true
                }
            },
            "type": "object",
            "required": [
                "amount",
                "currency"
            ]
        },
        "stripe:region/region:Region": {
            "type": "string",
            "enum": [
                {
                    "name": "here",
                    "value": "HERE"
                },
                {
                    "name": "overThere",
                    "value": "OVER_THERE"
                }
            ]
        }
    },
    "provider": {
        "description": "The provider type for the stripe package. By default, resources use package-wide configuration\nsettings, however an explicit `Provider` instance may be created and passed during resource\nconstruction to achieve fine-grained programmatic control over provider settings. See the\n[documentation](https://www.pulumi.com/docs/reference/programming-model/#providers) for more information.\n",
        "properties": {
            "apiKey": {
                "type": "string",
                "description": "The Stripe secret API key\n",
                "secret": true
            }
        },
        "required": [
            "apiKey"
        ],
        "inputProperties": {
            "apiKey": {
                "type": "string",
                "description": "The Stripe secret API key\n",
                "secret": true
            }
        },
        "requiredInputs": [
            "apiKey"
        ],
        "methods": {
            "terraformConfig": "pulumi:providers:stripe/terraformConfig"
        }
    },
    "resources": {
        "stripe:index/card:Card": {
            "properties": {
                "address": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Address map with fields related to the address: line1, line2, city, state, zip and country\n"
                },
                "addressLine1Check": {
                    "type": "string",
                    "description": "If address_line1 was provided, results of the check: pass, fail, unavailable, or unchecked.\n"
                },
                "addressZipCheck": {
                    "type": "string",
                    "description": "If address_zip was provided, results of the check: pass, fail, unavailable, or unchecked.\n"
                },
                "availablePayoutMethods": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A set of available payout methods for this card. Only values from this set should be passed as the method when creating\na payout.\n"
                },
                "brand": {
                    "type": "string",
                    "description": "Card brand. Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.\n"
                },
                "country": {
                    "type": "string",
                    "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the\ninternational breakdown of cards you’ve collected.\n"
                },
                "customer": {
                    "type": "string",
                    "description": "The customer that this card belongs to.\n"
                },
                "cvc": {
                    "type": "integer",
                    "description": "Card security code. Highly recommended to always include this value, but it's required only for accounts based in\nEuropean countries.\n",
                    "secret": true
                },
                "cvcCheck": {
                    "type": "string",
                    "description": "If a CVC was provided, results of the check: pass, fail, unavailable, or unchecked. A result of unchecked indicates that\nCVC was provided but hasn’t been checked yet.\n"
                },
                "expMonth": {
                    "type": "integer",
                    "description": "Two-digit number representing the card's expiration month.\n"
                },
                "expYear": {
                    "type": "integer",
                    "description": "Four-digit number representing the card's expiration year.\n"
                },
                "fingerprint": {
                    "type": "string",
                    "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve\nsigned up with you are using the same card number, for example. For payment methods that tokenize card information\n(Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n"
                },
                "funding": {
                    "type": "string",
                    "description": "Card funding type. Can be credit, debit, prepaid, or unknown.\n"
                },
                "last4": {
                    "type": "string",
                    "description": "The last four digits of the card.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Cardholder name.\n"
                },
                "number": {
                    "type": "string",
                    "description": "The card number, as a string without any separators.\n",
                    "secret": true
                },
                "tokenizationMethod": {
                    "type": "string",
                    "description": "If the card number is tokenized, this is the method that was used. Can be android_pay (includes Google Pay), apple_pay,\nmasterpass, visa_checkout, or null.\n"
                }
            },
            "required": [
                "addressLine1Check",
                "addressZipCheck",
                "availablePayoutMethods",
                "brand",
                "country",
                "customer",
                "cvcCheck",
                "expMonth",
                "expYear",
                "fingerprint",
                "funding",
                "last4",
                "name",
                "number",
                "tokenizationMethod"
            ],
            "inputProperties": {
                "address": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Address map with fields related to the address: line1, line2, city, state, zip and country\n"
                },
                "customer": {
                    "type": "string",
                    "description": "The customer that this card belongs to.\n",
                    "willReplaceOnChanges": true
                },
                "cvc": {
                    "type": "integer",
                    "description": "Card security code. Highly recommended to always include this value, but it's required only for accounts based in\nEuropean countries.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                },
                "expMonth": {
                    "type": "integer",
                    "description": "Two-digit number representing the card's expiration month.\n"
                },
                "expYear": {
                    "type": "integer",
                    "description": "Four-digit number representing the card's expiration year.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Cardholder name.\n"
                },
                "number": {
                    "type": "string",
                    "description": "The card number, as a string without any separators.\n",
                    "secret": true,
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "customer",
                "expMonth",
                "expYear",
                "number"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Card resources.\n",
                "properties": {
                    "address": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Address map with fields related to the address: line1, line2, city, state, zip and country\n"
                    },
                    "addressLine1Check": {
                        "type": "string",
                        "description": "If address_line1 was provided, results of the check: pass, fail, unavailable, or unchecked.\n"
                    },
                    "addressZipCheck": {
                        "type": "string",
                        "description": "If address_zip was provided, results of the check: pass, fail, unavailable, or unchecked.\n"
                    },
                    "availablePayoutMethods": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A set of available payout methods for this card. Only values from this set should be passed as the method when creating\na payout.\n"
                    },
                    "brand": {
                        "type": "string",
                        "description": "Card brand. Can be American Express, Diners Club, Discover, JCB, MasterCard, UnionPay, Visa, or Unknown.\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "Two-letter ISO code representing the country of the card. You could use this attribute to get a sense of the\ninternational breakdown of cards you’ve collected.\n"
                    },
                    "customer": {
                        "type": "string",
                        "description": "The customer that this card belongs to.\n",
                        "willReplaceOnChanges": true
                    },
                    "cvc": {
                        "type": "integer",
                        "description": "Card security code. Highly recommended to always include this value, but it's required only for accounts based in\nEuropean countries.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "cvcCheck": {
                        "type": "string",
                        "description": "If a CVC was provided, results of the check: pass, fail, unavailable, or unchecked. A result of unchecked indicates that\nCVC was provided but hasn’t been checked yet.\n"
                    },
                    "expMonth": {
                        "type": "integer",
                        "description": "Two-digit number representing the card's expiration month.\n"
                    },
                    "expYear": {
                        "type": "integer",
                        "description": "Four-digit number representing the card's expiration year.\n"
                    },
                    "fingerprint": {
                        "type": "string",
                        "description": "Uniquely identifies this particular card number. You can use this attribute to check whether two customers who’ve\nsigned up with you are using the same card number, for example. For payment methods that tokenize card information\n(Apple Pay, Google Pay), the tokenized number might be provided instead of the underlying card number.\n"
                    },
                    "funding": {
                        "type": "string",
                        "description": "Card funding type. Can be credit, debit, prepaid, or unknown.\n"
                    },
                    "last4": {
                        "type": "string",
                        "description": "The last four digits of the card.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Cardholder name.\n"
                    },
                    "number": {
                        "type": "string",
                        "description": "The card number, as a string without any separators.\n",
                        "secret": true,
                        "willReplaceOnChanges": true
                    },
                    "tokenizationMethod": {
                        "type": "string",
                        "description": "If the card number is tokenized, this is the method that was used. Can be android_pay (includes Google Pay), apple_pay,\nmasterpass, visa_checkout, or null.\n"
                    }
                },
                "type": "object"
            }
        },
        "stripe:index/coupon:Coupon": {
            "properties": {
                "amountOff": {
                    "type": "integer",
                    "description": "Amount (in the currency specified) that will be taken off the subtotal of any invoices for this customer.\n"
                },
                "appliesTos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of product IDs this coupon applies to\n"
                },
                "couponId": {
                    "type": "string",
                    "description": "Unique string of your choice that will be used to identify this coupon when applying it to a customer. If you don’t\nwant to specify a particular code, you can leave the ID blank and we’ll generate a random code for you.\n"
                },
                "currency": {
                    "type": "string",
                    "description": "If amount_off has been set, the three-letter ISO code for the currency of the amount to take off.\n"
                },
                "duration": {
                    "type": "string",
                    "description": "One of forever, once, and repeating. Describes how long a customer who applies this coupon will get the discount.\n"
                },
                "durationInMonths": {
                    "type": "integer",
                    "description": "If duration is repeating, the number of months the coupon applies. Null if coupon duration is forever or once.\n"
                },
                "maxRedemptions": {
                    "type": "integer",
                    "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the coupon displayed to customers on for instance invoices or receipts.\n"
                },
                "percentOff": {
                    "type": "number",
                    "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For\nexample, a coupon with percent_off of 50 will make a $100 invoice $50 instead.\n"
                },
                "redeemBy": {
                    "type": "string",
                    "description": "Date after which the coupon can no longer be redeemed. Expected format is RFC3339\n"
                },
                "timesRedeemed": {
                    "type": "integer",
                    "description": "Number of times this coupon has been applied to a customer.\n"
                },
                "valid": {
                    "type": "boolean",
                    "description": "Taking account of the above properties, whether this coupon can still be applied to a customer.\n"
                }
            },
            "required": [
                "couponId",
                "name",
                "timesRedeemed",
                "valid"
            ],
            "inputProperties": {
                "amountOff": {
                    "type": "integer",
                    "description": "Amount (in the currency specified) that will be taken off the subtotal of any invoices for this customer.\n",
                    "willReplaceOnChanges": true
                },
                "appliesTos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of product IDs this coupon applies to\n",
                    "willReplaceOnChanges": true
                },
                "couponId": {
                    "type": "string",
                    "description": "Unique string of your choice that will be used to identify this coupon when applying it to a customer. If you don’t\nwant to specify a particular code, you can leave the ID blank and we’ll generate a random code for you.\n",
                    "willReplaceOnChanges": true
                },
                "currency": {
                    "type": "string",
                    "description": "If amount_off has been set, the three-letter ISO code for the currency of the amount to take off.\n",
                    "willReplaceOnChanges": true
                },
                "duration": {
                    "type": "string",
                    "description": "One of forever, once, and repeating. Describes how long a customer who applies this coupon will get the discount.\n",
                    "willReplaceOnChanges": true
                },
                "durationInMonths": {
                    "type": "integer",
                    "description": "If duration is repeating, the number of months the coupon applies. Null if coupon duration is forever or once.\n",
                    "willReplaceOnChanges": true
                },
                "maxRedemptions": {
                    "type": "integer",
                    "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.\n",
                    "willReplaceOnChanges": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "Name of the coupon displayed to customers on for instance invoices or receipts.\n"
                },
                "percentOff": {
                    "type": "number",
                    "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For\nexample, a coupon with percent_off of 50 will make a $100 invoice $50 instead.\n",
                    "willReplaceOnChanges": true
                },
                "redeemBy": {
                    "type": "string",
                    "description": "Date after which the coupon can no longer be redeemed. Expected format is RFC3339\n",
                    "willReplaceOnChanges": true
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Coupon resources.\n",
                "properties": {
                    "amountOff": {
                        "type": "integer",
                        "description": "Amount (in the currency specified) that will be taken off the subtotal of any invoices for this customer.\n",
                        "willReplaceOnChanges": true
                    },
                    "appliesTos": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of product IDs this coupon applies to\n",
                        "willReplaceOnChanges": true
                    },
                    "couponId": {
                        "type": "string",
                        "description": "Unique string of your choice that will be used to identify this coupon when applying it to a customer. If you don’t\nwant to specify a particular code, you can leave the ID blank and we’ll generate a random code for you.\n",
                        "willReplaceOnChanges": true
                    },
                    "currency": {
                        "type": "string",
                        "description": "If amount_off has been set, the three-letter ISO code for the currency of the amount to take off.\n",
                        "willReplaceOnChanges": true
                    },
                    "duration": {
                        "type": "string",
                        "description": "One of forever, once, and repeating. Describes how long a customer who applies this coupon will get the discount.\n",
                        "willReplaceOnChanges": true
                    },
                    "durationInMonths": {
                        "type": "integer",
                        "description": "If duration is repeating, the number of months the coupon applies. Null if coupon duration is forever or once.\n",
                        "willReplaceOnChanges": true
                    },
                    "maxRedemptions": {
                        "type": "integer",
                        "description": "Maximum number of times this coupon can be redeemed, in total, across all customers, before it is no longer valid.\n",
                        "willReplaceOnChanges": true
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "Name of the coupon displayed to customers on for instance invoices or receipts.\n"
                    },
                    "percentOff": {
                        "type": "number",
                        "description": "Percent that will be taken off the subtotal of any invoices for this customer for the duration of the coupon. For\nexample, a coupon with percent_off of 50 will make a $100 invoice $50 instead.\n",
                        "willReplaceOnChanges": true
                    },
                    "redeemBy": {
                        "type": "string",
                        "description": "Date after which the coupon can no longer be redeemed. Expected format is RFC3339\n",
                        "willReplaceOnChanges": true
                    },
                    "timesRedeemed": {
                        "type": "integer",
                        "description": "Number of times this coupon has been applied to a customer.\n"
                    },
                    "valid": {
                        "type": "boolean",
                        "description": "Taking account of the above properties, whether this coupon can still be applied to a customer.\n"
                    }
                },
                "type": "object"
            }
        },
        "stripe:index/customer:Customer": {
            "properties": {
                "address": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Address map with fields related to the address: line1, line2, city, state, postal_code and country\n"
                },
                "balance": {
                    "type": "integer",
                    "description": "An integer amount in cents that represents the customer’s current balance, which affect the customer’s future\ninvoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases\nthe amount due on an invoice.\n"
                },
                "defaultInvoicePrefix": {
                    "type": "string",
                    "description": "The default (auto-generated) prefix for the customer used to generate unique invoice numbers.\n"
                },
                "description": {
                    "type": "string",
                    "description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching\nand tracking. This may be up to 512 characters.\n"
                },
                "invoicePrefix": {
                    "type": "string",
                    "description": "The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers.\n"
                },
                "invoiceSettings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Default invoice settings for this customer.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The customer’s full name or business name.\n"
                },
                "nextInvoiceSequence": {
                    "type": "integer",
                    "description": "The sequence to be used on the customer’s next invoice. Defaults to 1.\n"
                },
                "phone": {
                    "type": "string",
                    "description": "The customer’s phone number.\n"
                },
                "preferredLocales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Customer’s preferred languages, ordered by preference.\n"
                },
                "shipping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Shipping map with fields like name, phone and fields related to the address: line1, line2, city, state, postal_code and\ncountry.\n"
                }
            },
            "required": [
                "defaultInvoicePrefix",
                "name"
            ],
            "inputProperties": {
                "address": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Address map with fields related to the address: line1, line2, city, state, postal_code and country\n"
                },
                "balance": {
                    "type": "integer",
                    "description": "An integer amount in cents that represents the customer’s current balance, which affect the customer’s future\ninvoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases\nthe amount due on an invoice.\n"
                },
                "description": {
                    "type": "string",
                    "description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.\n"
                },
                "email": {
                    "type": "string",
                    "description": "Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching\nand tracking. This may be up to 512 characters.\n"
                },
                "invoicePrefix": {
                    "type": "string",
                    "description": "The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers.\n"
                },
                "invoiceSettings": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Default invoice settings for this customer.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The customer’s full name or business name.\n"
                },
                "nextInvoiceSequence": {
                    "type": "integer",
                    "description": "The sequence to be used on the customer’s next invoice. Defaults to 1.\n"
                },
                "phone": {
                    "type": "string",
                    "description": "The customer’s phone number.\n"
                },
                "preferredLocales": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Customer’s preferred languages, ordered by preference.\n"
                },
                "shipping": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Shipping map with fields like name, phone and fields related to the address: line1, line2, city, state, postal_code and\ncountry.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Customer resources.\n",
                "properties": {
                    "address": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Address map with fields related to the address: line1, line2, city, state, postal_code and country\n"
                    },
                    "balance": {
                        "type": "integer",
                        "description": "An integer amount in cents that represents the customer’s current balance, which affect the customer’s future\ninvoices. A negative amount represents a credit that decreases the amount due on an invoice; a positive amount increases\nthe amount due on an invoice.\n"
                    },
                    "defaultInvoicePrefix": {
                        "type": "string",
                        "description": "The default (auto-generated) prefix for the customer used to generate unique invoice numbers.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "An arbitrary string that you can attach to a customer object. It is displayed alongside the customer in the dashboard.\n"
                    },
                    "email": {
                        "type": "string",
                        "description": "Customer’s email address. It’s displayed alongside the customer in your dashboard and can be useful for searching\nand tracking. This may be up to 512 characters.\n"
                    },
                    "invoicePrefix": {
                        "type": "string",
                        "description": "The prefix for the customer used to generate unique invoice numbers. Must be 3–12 uppercase letters or numbers.\n"
                    },
                    "invoiceSettings": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Default invoice settings for this customer.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The customer’s full name or business name.\n"
                    },
                    "nextInvoiceSequence": {
                        "type": "integer",
                        "description": "The sequence to be used on the customer’s next invoice. Defaults to 1.\n"
                    },
                    "phone": {
                        "type": "string",
                        "description": "The customer’s phone number.\n"
                    },
                    "preferredLocales": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Customer’s preferred languages, ordered by preference.\n"
                    },
                    "shipping": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Shipping map with fields like name, phone and fields related to the address: line1, line2, city, state, postal_code and\ncountry.\n"
                    }
                },
                "type": "object"
            }
        },
        "stripe:index/file:File": {
            "properties": {
                "base64content": {
                    "type": "string",
                    "description": "A content file to upload encoded by base64.\n"
                },
                "created": {
                    "type": "integer",
                    "description": "Time at which the object was created. Measured in seconds since the Unix epoch.\n"
                },
                "expiresAt": {
                    "type": "integer",
                    "description": "The file expires and isn’t available at this time in epoch seconds.\n"
                },
                "filename": {
                    "type": "string",
                    "description": "The suitable name for saving the file to a filesystem.\n"
                },
                "linkData": {
                    "$ref": "#/types/stripe:index/FileLinkData:FileLinkData",
                    "description": "Optional parameters that automatically create a file link for the newly created file.\n"
                },
                "links": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/FileLink:FileLink"
                    }
                },
                "object": {
                    "type": "string",
                    "description": "String representing the object’s type. Objects of the same type share the same value.\n"
                },
                "purpose": {
                    "type": "string",
                    "description": "The purpose of the uploaded file.\n"
                },
                "size": {
                    "type": "integer",
                    "description": "The size of the file object in bytes.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The returned file type (for example, csv, pdf, jpg, or png).\n"
                },
                "url": {
                    "type": "string",
                    "description": "Use your live secret API key to download the file from this URL.\n"
                }
            },
            "required": [
                "base64content",
                "created",
                "expiresAt",
                "filename",
                "links",
                "object",
                "purpose",
                "size",
                "type",
                "url"
            ],
            "inputProperties": {
                "base64content": {
                    "type": "string",
                    "description": "A content file to upload encoded by base64.\n",
                    "willReplaceOnChanges": true
                },
                "filename": {
                    "type": "string",
                    "description": "The suitable name for saving the file to a filesystem.\n",
                    "willReplaceOnChanges": true
                },
                "linkData": {
                    "$ref": "#/types/stripe:index/FileLinkData:FileLinkData",
                    "description": "Optional parameters that automatically create a file link for the newly created file.\n",
                    "willReplaceOnChanges": true
                },
                "purpose": {
                    "type": "string",
                    "description": "The purpose of the uploaded file.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "base64content",
                "filename",
                "purpose"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering File resources.\n",
                "properties": {
                    "base64content": {
                        "type": "string",
                        "description": "A content file to upload encoded by base64.\n",
                        "willReplaceOnChanges": true
                    },
                    "created": {
                        "type": "integer",
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.\n"
                    },
                    "expiresAt": {
                        "type": "integer",
                        "description": "The file expires and isn’t available at this time in epoch seconds.\n"
                    },
                    "filename": {
                        "type": "string",
                        "description": "The suitable name for saving the file to a filesystem.\n",
                        "willReplaceOnChanges": true
                    },
                    "linkData": {
                        "$ref": "#/types/stripe:index/FileLinkData:FileLinkData",
                        "description": "Optional parameters that automatically create a file link for the newly created file.\n",
                        "willReplaceOnChanges": true
                    },
                    "links": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/stripe:index/FileLink:FileLink"
                        }
                    },
                    "object": {
                        "type": "string",
                        "description": "String representing the object’s type. Objects of the same type share the same value.\n"
                    },
                    "purpose": {
                        "type": "string",
                        "description": "The purpose of the uploaded file.\n",
                        "willReplaceOnChanges": true
                    },
                    "size": {
                        "type": "integer",
                        "description": "The size of the file object in bytes.\n"
                    },
                    "type": {
                        "type": "string",
                        "description": "The returned file type (for example, csv, pdf, jpg, or png).\n",
                        "willReplaceOnChanges": true
                    },
                    "url": {
                        "type": "string",
                        "description": "Use your live secret API key to download the file from this URL.\n"
                    }
                },
                "type": "object"
            }
        },
        "stripe:index/portalConfiguration:PortalConfiguration": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the configuration is active and can be used to create portal sessions.\n"
                },
                "businessProfile": {
                    "$ref": "#/types/stripe:index/PortalConfigurationBusinessProfile:PortalConfigurationBusinessProfile",
                    "description": "The business information shown to customers in the portal.\n"
                },
                "defaultReturnUrl": {
                    "type": "string",
                    "description": "The default URL to redirect customers to when they click on the portal's link to return to your website. This can be\noverriden when creating the session.\n"
                },
                "features": {
                    "$ref": "#/types/stripe:index/PortalConfigurationFeatures:PortalConfigurationFeatures",
                    "description": "Information about the features available in the portal.\n"
                },
                "isDefault": {
                    "type": "boolean",
                    "description": "Whether the configuration is the default. If true, this configuration can be managed in the Dashboard and portal\nsessions will use this configuration unless it is overriden when creating the session.\n"
                },
                "loginPage": {
                    "$ref": "#/types/stripe:index/PortalConfigurationLoginPage:PortalConfigurationLoginPage",
                    "description": "The hosted login page for this configuration.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                }
            },
            "required": [
                "businessProfile",
                "features",
                "isDefault",
                "loginPage"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the configuration is active and can be used to create portal sessions.\n"
                },
                "businessProfile": {
                    "$ref": "#/types/stripe:index/PortalConfigurationBusinessProfile:PortalConfigurationBusinessProfile",
                    "description": "The business information shown to customers in the portal.\n"
                },
                "defaultReturnUrl": {
                    "type": "string",
                    "description": "The default URL to redirect customers to when they click on the portal's link to return to your website. This can be\noverriden when creating the session.\n"
                },
                "features": {
                    "$ref": "#/types/stripe:index/PortalConfigurationFeatures:PortalConfigurationFeatures",
                    "description": "Information about the features available in the portal.\n"
                },
                "loginPage": {
                    "$ref": "#/types/stripe:index/PortalConfigurationLoginPage:PortalConfigurationLoginPage",
                    "description": "The hosted login page for this configuration.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                }
            },
            "requiredInputs": [
                "businessProfile",
                "features"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PortalConfiguration resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether the configuration is active and can be used to create portal sessions.\n"
                    },
                    "businessProfile": {
                        "$ref": "#/types/stripe:index/PortalConfigurationBusinessProfile:PortalConfigurationBusinessProfile",
                        "description": "The business information shown to customers in the portal.\n"
                    },
                    "defaultReturnUrl": {
                        "type": "string",
                        "description": "The default URL to redirect customers to when they click on the portal's link to return to your website. This can be\noverriden when creating the session.\n"
                    },
                    "features": {
                        "$ref": "#/types/stripe:index/PortalConfigurationFeatures:PortalConfigurationFeatures",
                        "description": "Information about the features available in the portal.\n"
                    },
                    "isDefault": {
                        "type": "boolean",
                        "description": "Whether the configuration is the default. If true, this configuration can be managed in the Dashboard and portal\nsessions will use this configuration unless it is overriden when creating the session.\n"
                    },
                    "loginPage": {
                        "$ref": "#/types/stripe:index/PortalConfigurationLoginPage:PortalConfigurationLoginPage",
                        "description": "The hosted login page for this configuration.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                    }
                },
                "type": "object"
            }
        },
        "stripe:index/price:Price": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the price can be used for new purchases. Defaults to true.\n"
                },
                "billingScheme": {
                    "type": "string",
                    "description": "Describes how to compute the price per period. Either per_unit or tiered. per_unit indicates that the fixed amount\n(specified in unit_amount or unit_amount_decimal) will be charged per unit in quantity (for prices with\nusage_type=licensed), or per unit of total usage (for prices with usage_type=metered). tiered indicates that the unit\npricing will be computed using a tiering strategy as defined using the tiers and tiers_mode attributes.\n"
                },
                "currency": {
                    "type": "string",
                    "description": "Three-letter ISO currency code, in lowercase.\n"
                },
                "currencyOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/PriceCurrencyOption:PriceCurrencyOption"
                    },
                    "description": "Prices defined in each available currency option. Each key must be a three-letter ISO currency code and a supported\ncurrency\n"
                },
                "lookupKey": {
                    "type": "string",
                    "description": "A lookup key used to retrieve prices dynamically from a static string.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A brief description of the price, hidden from customers.\n"
                },
                "product": {
                    "type": "string",
                    "description": "The ID of the product that this price will belong to.\n"
                },
                "recurring": {
                    "$ref": "#/types/stripe:index/PriceRecurring:PriceRecurring",
                    "description": "The recurring components of a price such as interval and usage_type.\n"
                },
                "taxBehaviour": {
                    "type": "string",
                    "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of inclusive, exclusive, or\nunspecified. Once specified as either inclusive or exclusive, it cannot be changed.\n"
                },
                "tiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/PriceTier:PriceTier"
                    },
                    "description": "Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered. See also the\ndocumentation for billing_scheme.\n"
                },
                "tiersMode": {
                    "type": "string",
                    "description": "Defines if the tiering price should be graduated or volume based. In volume-based tiering, the maximum quantity within a\nperiod determines the per unit price, in graduated tiering pricing can successively change as the quantity grows.\n"
                },
                "transferLookupKey": {
                    "type": "boolean",
                    "description": "If set to true, will atomically remove the lookup key from the existing price, and assign it to this price.\n"
                },
                "transformQuantity": {
                    "$ref": "#/types/stripe:index/PriceTransformQuantity:PriceTransformQuantity",
                    "description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with\ntiers\n"
                },
                "type": {
                    "type": "string",
                    "description": "One of one_time or recurring depending on whether the price is for a one-time purchase or a recurring (subscription)\npurchase\n"
                },
                "unitAmount": {
                    "type": "integer",
                    "description": "A positive integer in cents (or -1 for a free price) representing how much to charge.\n"
                },
                "unitAmountDecimal": {
                    "type": "number",
                    "description": "Same as unit_amount, but accepts a decimal value in cents with at most 12 decimal places. Only one of unit_amount and\nunit_amount_decimal can be set\n"
                }
            },
            "required": [
                "billingScheme",
                "currency",
                "product",
                "type",
                "unitAmount",
                "unitAmountDecimal"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the price can be used for new purchases. Defaults to true.\n"
                },
                "billingScheme": {
                    "type": "string",
                    "description": "Describes how to compute the price per period. Either per_unit or tiered. per_unit indicates that the fixed amount\n(specified in unit_amount or unit_amount_decimal) will be charged per unit in quantity (for prices with\nusage_type=licensed), or per unit of total usage (for prices with usage_type=metered). tiered indicates that the unit\npricing will be computed using a tiering strategy as defined using the tiers and tiers_mode attributes.\n",
                    "willReplaceOnChanges": true
                },
                "currency": {
                    "type": "string",
                    "description": "Three-letter ISO currency code, in lowercase.\n",
                    "willReplaceOnChanges": true
                },
                "currencyOptions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/PriceCurrencyOption:PriceCurrencyOption"
                    },
                    "description": "Prices defined in each available currency option. Each key must be a three-letter ISO currency code and a supported\ncurrency\n"
                },
                "lookupKey": {
                    "type": "string",
                    "description": "A lookup key used to retrieve prices dynamically from a static string.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "nickname": {
                    "type": "string",
                    "description": "A brief description of the price, hidden from customers.\n"
                },
                "product": {
                    "type": "string",
                    "description": "The ID of the product that this price will belong to.\n",
                    "willReplaceOnChanges": true
                },
                "recurring": {
                    "$ref": "#/types/stripe:index/PriceRecurring:PriceRecurring",
                    "description": "The recurring components of a price such as interval and usage_type.\n",
                    "willReplaceOnChanges": true
                },
                "taxBehaviour": {
                    "type": "string",
                    "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of inclusive, exclusive, or\nunspecified. Once specified as either inclusive or exclusive, it cannot be changed.\n"
                },
                "tiers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/PriceTier:PriceTier"
                    },
                    "description": "Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered. See also the\ndocumentation for billing_scheme.\n",
                    "willReplaceOnChanges": true
                },
                "tiersMode": {
                    "type": "string",
                    "description": "Defines if the tiering price should be graduated or volume based. In volume-based tiering, the maximum quantity within a\nperiod determines the per unit price, in graduated tiering pricing can successively change as the quantity grows.\n",
                    "willReplaceOnChanges": true
                },
                "transferLookupKey": {
                    "type": "boolean",
                    "description": "If set to true, will atomically remove the lookup key from the existing price, and assign it to this price.\n"
                },
                "transformQuantity": {
                    "$ref": "#/types/stripe:index/PriceTransformQuantity:PriceTransformQuantity",
                    "description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with\ntiers\n",
                    "willReplaceOnChanges": true
                },
                "unitAmount": {
                    "type": "integer",
                    "description": "A positive integer in cents (or -1 for a free price) representing how much to charge.\n",
                    "willReplaceOnChanges": true
                },
                "unitAmountDecimal": {
                    "type": "number",
                    "description": "Same as unit_amount, but accepts a decimal value in cents with at most 12 decimal places. Only one of unit_amount and\nunit_amount_decimal can be set\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "currency",
                "product"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Price resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether the price can be used for new purchases. Defaults to true.\n"
                    },
                    "billingScheme": {
                        "type": "string",
                        "description": "Describes how to compute the price per period. Either per_unit or tiered. per_unit indicates that the fixed amount\n(specified in unit_amount or unit_amount_decimal) will be charged per unit in quantity (for prices with\nusage_type=licensed), or per unit of total usage (for prices with usage_type=metered). tiered indicates that the unit\npricing will be computed using a tiering strategy as defined using the tiers and tiers_mode attributes.\n",
                        "willReplaceOnChanges": true
                    },
                    "currency": {
                        "type": "string",
                        "description": "Three-letter ISO currency code, in lowercase.\n",
                        "willReplaceOnChanges": true
                    },
                    "currencyOptions": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/stripe:index/PriceCurrencyOption:PriceCurrencyOption"
                        },
                        "description": "Prices defined in each available currency option. Each key must be a three-letter ISO currency code and a supported\ncurrency\n"
                    },
                    "lookupKey": {
                        "type": "string",
                        "description": "A lookup key used to retrieve prices dynamically from a static string.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                    },
                    "nickname": {
                        "type": "string",
                        "description": "A brief description of the price, hidden from customers.\n"
                    },
                    "product": {
                        "type": "string",
                        "description": "The ID of the product that this price will belong to.\n",
                        "willReplaceOnChanges": true
                    },
                    "recurring": {
                        "$ref": "#/types/stripe:index/PriceRecurring:PriceRecurring",
                        "description": "The recurring components of a price such as interval and usage_type.\n",
                        "willReplaceOnChanges": true
                    },
                    "taxBehaviour": {
                        "type": "string",
                        "description": "Specifies whether the price is considered inclusive of taxes or exclusive of taxes. One of inclusive, exclusive, or\nunspecified. Once specified as either inclusive or exclusive, it cannot be changed.\n"
                    },
                    "tiers": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/stripe:index/PriceTier:PriceTier"
                        },
                        "description": "Each element represents a pricing tier. This parameter requires billing_scheme to be set to tiered. See also the\ndocumentation for billing_scheme.\n",
                        "willReplaceOnChanges": true
                    },
                    "tiersMode": {
                        "type": "string",
                        "description": "Defines if the tiering price should be graduated or volume based. In volume-based tiering, the maximum quantity within a\nperiod determines the per unit price, in graduated tiering pricing can successively change as the quantity grows.\n",
                        "willReplaceOnChanges": true
                    },
                    "transferLookupKey": {
                        "type": "boolean",
                        "description": "If set to true, will atomically remove the lookup key from the existing price, and assign it to this price.\n"
                    },
                    "transformQuantity": {
                        "$ref": "#/types/stripe:index/PriceTransformQuantity:PriceTransformQuantity",
                        "description": "Apply a transformation to the reported usage or set quantity before computing the billed price. Cannot be combined with\ntiers\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "One of one_time or recurring depending on whether the price is for a one-time purchase or a recurring (subscription)\npurchase\n"
                    },
                    "unitAmount": {
                        "type": "integer",
                        "description": "A positive integer in cents (or -1 for a free price) representing how much to charge.\n",
                        "willReplaceOnChanges": true
                    },
                    "unitAmountDecimal": {
                        "type": "number",
                        "description": "Same as unit_amount, but accepts a decimal value in cents with at most 12 decimal places. Only one of unit_amount and\nunit_amount_decimal can be set\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "stripe:index/product:Product": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the product is currently available for purchase. Defaults to true.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The product’s description, meant to be displayable to the customer. Use this field to optionally store a long form\nexplanation of the product being sold for your own rendering purposes.\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of up to 15 features for this product. These are displayed in pricing tables.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The product’s name, meant to be displayable to the customer. Whenever this product is sold via a subscription, name\nwill show up on associated invoice line item descriptions.\n"
                },
                "packageDimensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "description": "The dimensions of this product for shipping purposes.\n"
                },
                "productId": {
                    "type": "string",
                    "description": "Unique identifier for the object.\n"
                },
                "shippable": {
                    "type": "boolean",
                    "description": "Whether this product is shipped (i.e., physical goods).\n"
                },
                "statementDescriptor": {
                    "type": "string",
                    "description": "An arbitrary string to be displayed on your customer’s credit card or bank statement. While most banks display this\ninformation consistently, some may display it incorrectly or not at all. This may be up to 22 characters. The statement\ndescription may not include \u003c, \u003e, \\, \", ’ characters, and will appear on your customer’s statement in capital\nletters. Non-ASCII characters are automatically stripped. It must contain at least one letter.\n"
                },
                "taxCode": {
                    "type": "string",
                    "description": "A tax code ID. Supported values are listed in the TaxCode resource and at https://stripe.com/docs/tax/tax-categories.\n"
                },
                "unitLabel": {
                    "type": "string",
                    "description": "A label that represents units of this product in Stripe and on customers’ receipts and invoices. When set, this will\nbe included in associated invoice line item descriptions.\n"
                },
                "url": {
                    "type": "string",
                    "description": "A URL of a publicly-accessible webpage for this product.\n"
                }
            },
            "required": [
                "name",
                "productId"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the product is currently available for purchase. Defaults to true.\n"
                },
                "description": {
                    "type": "string",
                    "description": "The product’s description, meant to be displayable to the customer. Use this field to optionally store a long form\nexplanation of the product being sold for your own rendering purposes.\n"
                },
                "features": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of up to 15 features for this product. These are displayed in pricing tables.\n"
                },
                "images": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "name": {
                    "type": "string",
                    "description": "The product’s name, meant to be displayable to the customer. Whenever this product is sold via a subscription, name\nwill show up on associated invoice line item descriptions.\n"
                },
                "packageDimensions": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "number"
                    },
                    "description": "The dimensions of this product for shipping purposes.\n"
                },
                "productId": {
                    "type": "string",
                    "description": "Unique identifier for the object.\n",
                    "willReplaceOnChanges": true
                },
                "shippable": {
                    "type": "boolean",
                    "description": "Whether this product is shipped (i.e., physical goods).\n"
                },
                "statementDescriptor": {
                    "type": "string",
                    "description": "An arbitrary string to be displayed on your customer’s credit card or bank statement. While most banks display this\ninformation consistently, some may display it incorrectly or not at all. This may be up to 22 characters. The statement\ndescription may not include \u003c, \u003e, \\, \", ’ characters, and will appear on your customer’s statement in capital\nletters. Non-ASCII characters are automatically stripped. It must contain at least one letter.\n"
                },
                "taxCode": {
                    "type": "string",
                    "description": "A tax code ID. Supported values are listed in the TaxCode resource and at https://stripe.com/docs/tax/tax-categories.\n"
                },
                "unitLabel": {
                    "type": "string",
                    "description": "A label that represents units of this product in Stripe and on customers’ receipts and invoices. When set, this will\nbe included in associated invoice line item descriptions.\n"
                },
                "url": {
                    "type": "string",
                    "description": "A URL of a publicly-accessible webpage for this product.\n"
                }
            },
            "stateInputs": {
                "description": "Input properties used for looking up and filtering Product resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether the product is currently available for purchase. Defaults to true.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "The product’s description, meant to be displayable to the customer. Use this field to optionally store a long form\nexplanation of the product being sold for your own rendering purposes.\n"
                    },
                    "features": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of up to 15 features for this product. These are displayed in pricing tables.\n"
                    },
                    "images": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "A list of up to 8 URLs of images for this product, meant to be displayable to the customer.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                    },
                    "name": {
                        "type": "string",
                        "description": "The product’s name, meant to be displayable to the customer. Whenever this product is sold via a subscription, name\nwill show up on associated invoice line item descriptions.\n"
                    },
                    "packageDimensions": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "number"
                        },
                        "description": "The dimensions of this product for shipping purposes.\n"
                    },
                    "productId": {
                        "type": "string",
                        "description": "Unique identifier for the object.\n",
                        "willReplaceOnChanges": true
                    },
                    "shippable": {
                        "type": "boolean",
                        "description": "Whether this product is shipped (i.e., physical goods).\n"
                    },
                    "statementDescriptor": {
                        "type": "string",
                        "description": "An arbitrary string to be displayed on your customer’s credit card or bank statement. While most banks display this\ninformation consistently, some may display it incorrectly or not at all. This may be up to 22 characters. The statement\ndescription may not include \u003c, \u003e, \\, \", ’ characters, and will appear on your customer’s statement in capital\nletters. Non-ASCII characters are automatically stripped. It must contain at least one letter.\n"
                    },
                    "taxCode": {
                        "type": "string",
                        "description": "A tax code ID. Supported values are listed in the TaxCode resource and at https://stripe.com/docs/tax/tax-categories.\n"
                    },
                    "unitLabel": {
                        "type": "string",
                        "description": "A label that represents units of this product in Stripe and on customers’ receipts and invoices. When set, this will\nbe included in associated invoice line item descriptions.\n"
                    },
                    "url": {
                        "type": "string",
                        "description": "A URL of a publicly-accessible webpage for this product.\n"
                    }
                },
                "type": "object"
            }
        },
        "stripe:index/promotionCode:PromotionCode": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the promotion code is currently active.\n"
                },
                "code": {
                    "type": "string",
                    "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for a specific\ncustomer. If left blank, we will generate one automatically.\n"
                },
                "coupon": {
                    "type": "string",
                    "description": "The coupon for this promotion code.\n"
                },
                "customer": {
                    "type": "string",
                    "description": "The customer that this promotion code can be used by. If not set, the promotion code can be used by all customers.\n"
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The timestamp at which this promotion code will expire. If the coupon has specified a redeems_by, then this value cannot\nbe after the coupon’s redeems_by. Expected format is RFC3339\n"
                },
                "maxRedemptions": {
                    "type": "integer",
                    "description": "A positive integer specifying the number of times the promotion code can be redeemed. If the coupon has specified a\nmax_redemptions, then this value cannot be greater than the coupon’s max_redemptions.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "restrictions": {
                    "$ref": "#/types/stripe:index/PromotionCodeRestrictions:PromotionCodeRestrictions",
                    "description": "Settings that restrict the redemption of the promotion code.\n"
                }
            },
            "required": [
                "coupon"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the promotion code is currently active.\n"
                },
                "code": {
                    "type": "string",
                    "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for a specific\ncustomer. If left blank, we will generate one automatically.\n",
                    "willReplaceOnChanges": true
                },
                "coupon": {
                    "type": "string",
                    "description": "The coupon for this promotion code.\n",
                    "willReplaceOnChanges": true
                },
                "customer": {
                    "type": "string",
                    "description": "The customer that this promotion code can be used by. If not set, the promotion code can be used by all customers.\n",
                    "willReplaceOnChanges": true
                },
                "expiresAt": {
                    "type": "string",
                    "description": "The timestamp at which this promotion code will expire. If the coupon has specified a redeems_by, then this value cannot\nbe after the coupon’s redeems_by. Expected format is RFC3339\n",
                    "willReplaceOnChanges": true
                },
                "maxRedemptions": {
                    "type": "integer",
                    "description": "A positive integer specifying the number of times the promotion code can be redeemed. If the coupon has specified a\nmax_redemptions, then this value cannot be greater than the coupon’s max_redemptions.\n",
                    "willReplaceOnChanges": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "restrictions": {
                    "$ref": "#/types/stripe:index/PromotionCodeRestrictions:PromotionCodeRestrictions",
                    "description": "Settings that restrict the redemption of the promotion code.\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "coupon"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering PromotionCode resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether the promotion code is currently active.\n"
                    },
                    "code": {
                        "type": "string",
                        "description": "The customer-facing code. Regardless of case, this code must be unique across all active promotion codes for a specific\ncustomer. If left blank, we will generate one automatically.\n",
                        "willReplaceOnChanges": true
                    },
                    "coupon": {
                        "type": "string",
                        "description": "The coupon for this promotion code.\n",
                        "willReplaceOnChanges": true
                    },
                    "customer": {
                        "type": "string",
                        "description": "The customer that this promotion code can be used by. If not set, the promotion code can be used by all customers.\n",
                        "willReplaceOnChanges": true
                    },
                    "expiresAt": {
                        "type": "string",
                        "description": "The timestamp at which this promotion code will expire. If the coupon has specified a redeems_by, then this value cannot\nbe after the coupon’s redeems_by. Expected format is RFC3339\n",
                        "willReplaceOnChanges": true
                    },
                    "maxRedemptions": {
                        "type": "integer",
                        "description": "A positive integer specifying the number of times the promotion code can be redeemed. If the coupon has specified a\nmax_redemptions, then this value cannot be greater than the coupon’s max_redemptions.\n",
                        "willReplaceOnChanges": true
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                    },
                    "restrictions": {
                        "$ref": "#/types/stripe:index/PromotionCodeRestrictions:PromotionCodeRestrictions",
                        "description": "Settings that restrict the redemption of the promotion code.\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "stripe:index/shippingRate:ShippingRate": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the shipping rate can be used for new purchases. Defaults to true.\n"
                },
                "deliveryEstimates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/ShippingRateDeliveryEstimate:ShippingRateDeliveryEstimate"
                    }
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.\n"
                },
                "fixedAmount": {
                    "$ref": "#/types/stripe:index/ShippingRateFixedAmount:ShippingRateFixedAmount",
                    "description": "Describes a fixed amount to charge for shipping. Must be present for now.\n"
                },
                "livemode": {
                    "type": "boolean",
                    "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "taxBehavior": {
                    "type": "string",
                    "description": "Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of inclusive, exclusive, or\nunspecified.\n"
                },
                "taxCode": {
                    "type": "string",
                    "description": "A tax code ID. The Shipping tax code is txcd_92010001.\n"
                },
                "type": {
                    "type": "string",
                    "description": "The type of calculation to use on the shipping rate. Can only be fixed_amount for now\n"
                }
            },
            "required": [
                "displayName",
                "fixedAmount",
                "livemode"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Whether the shipping rate can be used for new purchases. Defaults to true.\n"
                },
                "deliveryEstimates": {
                    "type": "array",
                    "items": {
                        "$ref": "#/types/stripe:index/ShippingRateDeliveryEstimate:ShippingRateDeliveryEstimate"
                    },
                    "willReplaceOnChanges": true
                },
                "displayName": {
                    "type": "string",
                    "description": "The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.\n",
                    "willReplaceOnChanges": true
                },
                "fixedAmount": {
                    "$ref": "#/types/stripe:index/ShippingRateFixedAmount:ShippingRateFixedAmount",
                    "description": "Describes a fixed amount to charge for shipping. Must be present for now.\n",
                    "willReplaceOnChanges": true
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "taxBehavior": {
                    "type": "string",
                    "description": "Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of inclusive, exclusive, or\nunspecified.\n"
                },
                "taxCode": {
                    "type": "string",
                    "description": "A tax code ID. The Shipping tax code is txcd_92010001.\n",
                    "willReplaceOnChanges": true
                },
                "type": {
                    "type": "string",
                    "description": "The type of calculation to use on the shipping rate. Can only be fixed_amount for now\n",
                    "willReplaceOnChanges": true
                }
            },
            "requiredInputs": [
                "displayName",
                "fixedAmount"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering ShippingRate resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Whether the shipping rate can be used for new purchases. Defaults to true.\n"
                    },
                    "deliveryEstimates": {
                        "type": "array",
                        "items": {
                            "$ref": "#/types/stripe:index/ShippingRateDeliveryEstimate:ShippingRateDeliveryEstimate"
                        },
                        "willReplaceOnChanges": true
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The name of the shipping rate, meant to be displayable to the customer. This will appear on CheckoutSessions.\n",
                        "willReplaceOnChanges": true
                    },
                    "fixedAmount": {
                        "$ref": "#/types/stripe:index/ShippingRateFixedAmount:ShippingRateFixedAmount",
                        "description": "Describes a fixed amount to charge for shipping. Must be present for now.\n",
                        "willReplaceOnChanges": true
                    },
                    "livemode": {
                        "type": "boolean",
                        "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                    },
                    "taxBehavior": {
                        "type": "string",
                        "description": "Specifies whether the rate is considered inclusive of taxes or exclusive of taxes. One of inclusive, exclusive, or\nunspecified.\n"
                    },
                    "taxCode": {
                        "type": "string",
                        "description": "A tax code ID. The Shipping tax code is txcd_92010001.\n",
                        "willReplaceOnChanges": true
                    },
                    "type": {
                        "type": "string",
                        "description": "The type of calculation to use on the shipping rate. Can only be fixed_amount for now\n",
                        "willReplaceOnChanges": true
                    }
                },
                "type": "object"
            }
        },
        "stripe:index/taxRate:TaxRate": {
            "properties": {
                "active": {
                    "type": "boolean",
                    "description": "Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new\napplications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.\n"
                },
                "country": {
                    "type": "string",
                    "description": "Two-letter country code (ISO 3166-1 alpha-2).\n"
                },
                "created": {
                    "type": "integer",
                    "description": "Time at which the object was created. Measured in seconds since the Unix epoch.\n"
                },
                "description": {
                    "type": "string",
                    "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the tax rate, which will be shown to users.\n"
                },
                "inclusive": {
                    "type": "boolean",
                    "description": "This specifies if the tax rate is inclusive or exclusive.\n"
                },
                "jurisdiction": {
                    "type": "string",
                    "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes.It also appears on your\ncustomer’s invoice.\n"
                },
                "livemode": {
                    "type": "boolean",
                    "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by\nposting an empty value to metadata.\n"
                },
                "object": {
                    "type": "string",
                    "description": "String representing the object’s type. Objects of the same type share the same value.\n"
                },
                "percentage": {
                    "type": "number",
                    "description": "This represents the tax rate percent out of 100.\n"
                },
                "state": {
                    "type": "string",
                    "description": "ISO 3166-2 subdivision code, without country prefix. For example, “NY” for New York, United States.\n"
                },
                "taxType": {
                    "type": "string",
                    "description": "The high-level tax type, such as vat or sales_tax.\n"
                }
            },
            "required": [
                "created",
                "displayName",
                "inclusive",
                "livemode",
                "object",
                "percentage"
            ],
            "inputProperties": {
                "active": {
                    "type": "boolean",
                    "description": "Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new\napplications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.\n"
                },
                "country": {
                    "type": "string",
                    "description": "Two-letter country code (ISO 3166-1 alpha-2).\n"
                },
                "description": {
                    "type": "string",
                    "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.\n"
                },
                "displayName": {
                    "type": "string",
                    "description": "The display name of the tax rate, which will be shown to users.\n"
                },
                "inclusive": {
                    "type": "boolean",
                    "description": "This specifies if the tax rate is inclusive or exclusive.\n"
                },
                "jurisdiction": {
                    "type": "string",
                    "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes.It also appears on your\ncustomer’s invoice.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by\nposting an empty value to metadata.\n"
                },
                "percentage": {
                    "type": "number",
                    "description": "This represents the tax rate percent out of 100.\n"
                },
                "state": {
                    "type": "string",
                    "description": "ISO 3166-2 subdivision code, without country prefix. For example, “NY” for New York, United States.\n"
                },
                "taxType": {
                    "type": "string",
                    "description": "The high-level tax type, such as vat or sales_tax.\n"
                }
            },
            "requiredInputs": [
                "displayName",
                "inclusive",
                "percentage"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering TaxRate resources.\n",
                "properties": {
                    "active": {
                        "type": "boolean",
                        "description": "Flag determining whether the tax rate is active or inactive (archived). Inactive tax rates cannot be used with new\napplications or Checkout Sessions, but will still work for subscriptions and invoices that already have it set.\n"
                    },
                    "country": {
                        "type": "string",
                        "description": "Two-letter country code (ISO 3166-1 alpha-2).\n"
                    },
                    "created": {
                        "type": "integer",
                        "description": "Time at which the object was created. Measured in seconds since the Unix epoch.\n"
                    },
                    "description": {
                        "type": "string",
                        "description": "An arbitrary string attached to the tax rate for your internal use only. It will not be visible to your customers.\n"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "The display name of the tax rate, which will be shown to users.\n"
                    },
                    "inclusive": {
                        "type": "boolean",
                        "description": "This specifies if the tax rate is inclusive or exclusive.\n"
                    },
                    "jurisdiction": {
                        "type": "string",
                        "description": "The jurisdiction for the tax rate. You can use this label field for tax reporting purposes.It also appears on your\ncustomer’s invoice.\n"
                    },
                    "livemode": {
                        "type": "boolean",
                        "description": "Has the value true if the object exists in live mode or the value false if the object exists in test mode.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format. Individual keys can be unset by posting an empty value to them. All keys can be unset by\nposting an empty value to metadata.\n"
                    },
                    "object": {
                        "type": "string",
                        "description": "String representing the object’s type. Objects of the same type share the same value.\n"
                    },
                    "percentage": {
                        "type": "number",
                        "description": "This represents the tax rate percent out of 100.\n"
                    },
                    "state": {
                        "type": "string",
                        "description": "ISO 3166-2 subdivision code, without country prefix. For example, “NY” for New York, United States.\n"
                    },
                    "taxType": {
                        "type": "string",
                        "description": "The high-level tax type, such as vat or sales_tax.\n"
                    }
                },
                "type": "object"
            }
        },
        "stripe:index/webhookEndpoint:WebhookEndpoint": {
            "properties": {
                "apiVersion": {
                    "type": "string",
                    "description": "Events sent to this endpoint will be generated with this Stripe Version instead of your account’s default Stripe\nVersion.\n"
                },
                "connect": {
                    "type": "boolean",
                    "description": "Whether this endpoint should receive events from connected accounts (true), or from your account (false). Defaults to\nfalse\n"
                },
                "description": {
                    "type": "string",
                    "description": "An optional description of what the webhook is used for.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable the webhook endpoint if set to true.\n"
                },
                "enabledEvents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of events to enable for this endpoint. [’*’] indicates that all events are enabled, except those that\nrequire explicit selection.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "secret": {
                    "type": "string",
                    "description": "The endpoint’s secret, used to generate webhook signatures. Only returned at creation.\n",
                    "secret": true
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the webhook endpoint.\n"
                }
            },
            "required": [
                "enabledEvents",
                "secret",
                "url"
            ],
            "inputProperties": {
                "apiVersion": {
                    "type": "string",
                    "description": "Events sent to this endpoint will be generated with this Stripe Version instead of your account’s default Stripe\nVersion.\n",
                    "willReplaceOnChanges": true
                },
                "connect": {
                    "type": "boolean",
                    "description": "Whether this endpoint should receive events from connected accounts (true), or from your account (false). Defaults to\nfalse\n",
                    "willReplaceOnChanges": true
                },
                "description": {
                    "type": "string",
                    "description": "An optional description of what the webhook is used for.\n"
                },
                "disabled": {
                    "type": "boolean",
                    "description": "Disable the webhook endpoint if set to true.\n"
                },
                "enabledEvents": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "The list of events to enable for this endpoint. [’*’] indicates that all events are enabled, except those that\nrequire explicit selection.\n"
                },
                "metadata": {
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                },
                "url": {
                    "type": "string",
                    "description": "The URL of the webhook endpoint.\n"
                }
            },
            "requiredInputs": [
                "enabledEvents",
                "url"
            ],
            "stateInputs": {
                "description": "Input properties used for looking up and filtering WebhookEndpoint resources.\n",
                "properties": {
                    "apiVersion": {
                        "type": "string",
                        "description": "Events sent to this endpoint will be generated with this Stripe Version instead of your account’s default Stripe\nVersion.\n",
                        "willReplaceOnChanges": true
                    },
                    "connect": {
                        "type": "boolean",
                        "description": "Whether this endpoint should receive events from connected accounts (true), or from your account (false). Defaults to\nfalse\n",
                        "willReplaceOnChanges": true
                    },
                    "description": {
                        "type": "string",
                        "description": "An optional description of what the webhook is used for.\n"
                    },
                    "disabled": {
                        "type": "boolean",
                        "description": "Disable the webhook endpoint if set to true.\n"
                    },
                    "enabledEvents": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The list of events to enable for this endpoint. [’*’] indicates that all events are enabled, except those that\nrequire explicit selection.\n"
                    },
                    "metadata": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the\nobject in a structured format.\n"
                    },
                    "secret": {
                        "type": "string",
                        "description": "The endpoint’s secret, used to generate webhook signatures. Only returned at creation.\n",
                        "secret": true
                    },
                    "url": {
                        "type": "string",
                        "description": "The URL of the webhook endpoint.\n"
                    }
                },
                "type": "object"
            }
        }
    },
    "functions": {
        "pulumi:providers:stripe/terraformConfig": {
            "description": "This function returns a Terraform config object with terraform-namecased keys,to be used with the Terraform Module Provider.",
            "inputs": {
                "properties": {
                    "__self__": {
                        "type": "ref",
                        "$ref": "#/resources/pulumi:providers:stripe"
                    }
                },
                "type": "pulumi:providers:stripe/terraformConfig",
                "required": [
                    "__self__"
                ]
            },
            "outputs": {
                "properties": {
                    "result": {
                        "additionalProperties": {
                            "$ref": "pulumi.json#/Any"
                        },
                        "type": "object"
                    }
                },
                "required": [
                    "result"
                ],
                "type": "object"
            }
        }
    }
}