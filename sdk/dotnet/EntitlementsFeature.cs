// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Stripe
{
    [StripeResourceType("stripe:index/entitlementsFeature:EntitlementsFeature")]
    public partial class EntitlementsFeature : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Inactive features cannot be attached to new products and will not be returned from the features list endpoint.
        /// </summary>
        [Output("active")]
        public Output<bool> Active { get; private set; } = null!;

        /// <summary>
        /// Has the value true if the object exists in live mode or the value false if the object exists in test mode
        /// </summary>
        [Output("livemode")]
        public Output<bool> Livemode { get; private set; } = null!;

        /// <summary>
        /// A unique key you provide as your own system identifier. This may be up to 80 characters.
        /// </summary>
        [Output("lookupKey")]
        public Output<string> LookupKey { get; private set; } = null!;

        /// <summary>
        /// Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the
        /// object in a structured format.
        /// </summary>
        [Output("metadata")]
        public Output<ImmutableDictionary<string, string>?> Metadata { get; private set; } = null!;

        /// <summary>
        /// The feature’s name, for your own purpose, not meant to be displayable to the customer.
        /// </summary>
        [Output("name")]
        public Output<string> Name { get; private set; } = null!;

        /// <summary>
        /// String representing the object’s type. Objects of the same type share the same value.
        /// </summary>
        [Output("object")]
        public Output<string> Object { get; private set; } = null!;


        /// <summary>
        /// Create a EntitlementsFeature resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public EntitlementsFeature(string name, EntitlementsFeatureArgs args, CustomResourceOptions? options = null)
            : base("stripe:index/entitlementsFeature:EntitlementsFeature", name, args ?? new EntitlementsFeatureArgs(), MakeResourceOptions(options, ""))
        {
        }

        private EntitlementsFeature(string name, Input<string> id, EntitlementsFeatureState? state = null, CustomResourceOptions? options = null)
            : base("stripe:index/entitlementsFeature:EntitlementsFeature", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing EntitlementsFeature resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static EntitlementsFeature Get(string name, Input<string> id, EntitlementsFeatureState? state = null, CustomResourceOptions? options = null)
        {
            return new EntitlementsFeature(name, id, state, options);
        }
    }

    public sealed class EntitlementsFeatureArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// A unique key you provide as your own system identifier. This may be up to 80 characters.
        /// </summary>
        [Input("lookupKey", required: true)]
        public Input<string> LookupKey { get; set; } = null!;

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the
        /// object in a structured format.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// The feature’s name, for your own purpose, not meant to be displayable to the customer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        public EntitlementsFeatureArgs()
        {
        }
        public static new EntitlementsFeatureArgs Empty => new EntitlementsFeatureArgs();
    }

    public sealed class EntitlementsFeatureState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Inactive features cannot be attached to new products and will not be returned from the features list endpoint.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// Has the value true if the object exists in live mode or the value false if the object exists in test mode
        /// </summary>
        [Input("livemode")]
        public Input<bool>? Livemode { get; set; }

        /// <summary>
        /// A unique key you provide as your own system identifier. This may be up to 80 characters.
        /// </summary>
        [Input("lookupKey")]
        public Input<string>? LookupKey { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the
        /// object in a structured format.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        /// <summary>
        /// The feature’s name, for your own purpose, not meant to be displayable to the customer.
        /// </summary>
        [Input("name")]
        public Input<string>? Name { get; set; }

        /// <summary>
        /// String representing the object’s type. Objects of the same type share the same value.
        /// </summary>
        [Input("object")]
        public Input<string>? Object { get; set; }

        public EntitlementsFeatureState()
        {
        }
        public static new EntitlementsFeatureState Empty => new EntitlementsFeatureState();
    }
}
