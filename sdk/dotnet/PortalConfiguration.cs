// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.Stripe
{
    [StripeResourceType("stripe:index/portalConfiguration:PortalConfiguration")]
    public partial class PortalConfiguration : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Whether the configuration is active and can be used to create portal sessions.
        /// </summary>
        [Output("active")]
        public Output<bool?> Active { get; private set; } = null!;

        /// <summary>
        /// The business information shown to customers in the portal.
        /// </summary>
        [Output("businessProfile")]
        public Output<Outputs.PortalConfigurationBusinessProfile> BusinessProfile { get; private set; } = null!;

        /// <summary>
        /// The default URL to redirect customers to when they click on the portal's link to return to your website. This can be
        /// overriden when creating the session.
        /// </summary>
        [Output("defaultReturnUrl")]
        public Output<string?> DefaultReturnUrl { get; private set; } = null!;

        /// <summary>
        /// Information about the features available in the portal.
        /// </summary>
        [Output("features")]
        public Output<Outputs.PortalConfigurationFeatures> Features { get; private set; } = null!;

        /// <summary>
        /// Whether the configuration is the default. If true, this configuration can be managed in the Dashboard and portal
        /// sessions will use this configuration unless it is overriden when creating the session.
        /// </summary>
        [Output("isDefault")]
        public Output<bool> IsDefault { get; private set; } = null!;

        /// <summary>
        /// The hosted login page for this configuration.
        /// </summary>
        [Output("loginPage")]
        public Output<Outputs.PortalConfigurationLoginPage> LoginPage { get; private set; } = null!;

        /// <summary>
        /// Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the
        /// object in a structured format.
        /// </summary>
        [Output("metadata")]
        public Output<ImmutableDictionary<string, string>?> Metadata { get; private set; } = null!;


        /// <summary>
        /// Create a PortalConfiguration resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public PortalConfiguration(string name, PortalConfigurationArgs args, CustomResourceOptions? options = null)
            : base("stripe:index/portalConfiguration:PortalConfiguration", name, args ?? new PortalConfigurationArgs(), MakeResourceOptions(options, ""))
        {
        }

        private PortalConfiguration(string name, Input<string> id, PortalConfigurationState? state = null, CustomResourceOptions? options = null)
            : base("stripe:index/portalConfiguration:PortalConfiguration", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing PortalConfiguration resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static PortalConfiguration Get(string name, Input<string> id, PortalConfigurationState? state = null, CustomResourceOptions? options = null)
        {
            return new PortalConfiguration(name, id, state, options);
        }
    }

    public sealed class PortalConfigurationArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the configuration is active and can be used to create portal sessions.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// The business information shown to customers in the portal.
        /// </summary>
        [Input("businessProfile", required: true)]
        public Input<Inputs.PortalConfigurationBusinessProfileArgs> BusinessProfile { get; set; } = null!;

        /// <summary>
        /// The default URL to redirect customers to when they click on the portal's link to return to your website. This can be
        /// overriden when creating the session.
        /// </summary>
        [Input("defaultReturnUrl")]
        public Input<string>? DefaultReturnUrl { get; set; }

        /// <summary>
        /// Information about the features available in the portal.
        /// </summary>
        [Input("features", required: true)]
        public Input<Inputs.PortalConfigurationFeaturesArgs> Features { get; set; } = null!;

        /// <summary>
        /// The hosted login page for this configuration.
        /// </summary>
        [Input("loginPage")]
        public Input<Inputs.PortalConfigurationLoginPageArgs>? LoginPage { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the
        /// object in a structured format.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        public PortalConfigurationArgs()
        {
        }
        public static new PortalConfigurationArgs Empty => new PortalConfigurationArgs();
    }

    public sealed class PortalConfigurationState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Whether the configuration is active and can be used to create portal sessions.
        /// </summary>
        [Input("active")]
        public Input<bool>? Active { get; set; }

        /// <summary>
        /// The business information shown to customers in the portal.
        /// </summary>
        [Input("businessProfile")]
        public Input<Inputs.PortalConfigurationBusinessProfileGetArgs>? BusinessProfile { get; set; }

        /// <summary>
        /// The default URL to redirect customers to when they click on the portal's link to return to your website. This can be
        /// overriden when creating the session.
        /// </summary>
        [Input("defaultReturnUrl")]
        public Input<string>? DefaultReturnUrl { get; set; }

        /// <summary>
        /// Information about the features available in the portal.
        /// </summary>
        [Input("features")]
        public Input<Inputs.PortalConfigurationFeaturesGetArgs>? Features { get; set; }

        /// <summary>
        /// Whether the configuration is the default. If true, this configuration can be managed in the Dashboard and portal
        /// sessions will use this configuration unless it is overriden when creating the session.
        /// </summary>
        [Input("isDefault")]
        public Input<bool>? IsDefault { get; set; }

        /// <summary>
        /// The hosted login page for this configuration.
        /// </summary>
        [Input("loginPage")]
        public Input<Inputs.PortalConfigurationLoginPageGetArgs>? LoginPage { get; set; }

        [Input("metadata")]
        private InputMap<string>? _metadata;

        /// <summary>
        /// Set of key-value pairs that you can attach to an object. This can be useful for storing additional information about the
        /// object in a structured format.
        /// </summary>
        public InputMap<string> Metadata
        {
            get => _metadata ?? (_metadata = new InputMap<string>());
            set => _metadata = value;
        }

        public PortalConfigurationState()
        {
        }
        public static new PortalConfigurationState Empty => new PortalConfigurationState();
    }
}
